/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 -t public/models/67c9ceacc959f55d6cdf4344.glb -o src/Components/Avatar.tsx -r public 
*/

// import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGraph } from "@react-three/fiber";
import { useAnimations, useFBX, useGLTF } from "@react-three/drei";
import {
	//  GLTF,
	SkeletonUtils,
} from "three-stdlib";
import { useWaifu, WAIFU_ANIMATION_TYPE } from "../Providers/WaifuProvider";

// type GLTFResult = GLTF & {
// 	nodes: {
// 		Wolf3D_Hair: THREE.SkinnedMesh;
// 		Wolf3D_Body: THREE.SkinnedMesh;
// 		Wolf3D_Outfit_Bottom: THREE.SkinnedMesh;
// 		Wolf3D_Outfit_Footwear: THREE.SkinnedMesh;
// 		Wolf3D_Outfit_Top: THREE.SkinnedMesh;
// 		EyeLeft: THREE.SkinnedMesh;
// 		EyeRight: THREE.SkinnedMesh;
// 		Wolf3D_Head: THREE.SkinnedMesh;
// 		Wolf3D_Teeth: THREE.SkinnedMesh;
// 		Hips: THREE.Bone;
// 	};
// 	materials: {
// 		Wolf3D_Hair: THREE.MeshStandardMaterial;
// 		Wolf3D_Body: THREE.MeshStandardMaterial;
// 		Wolf3D_Outfit_Bottom: THREE.MeshStandardMaterial;
// 		Wolf3D_Outfit_Footwear: THREE.MeshStandardMaterial;
// 		Wolf3D_Outfit_Top: THREE.MeshStandardMaterial;
// 		Wolf3D_Eye: THREE.MeshStandardMaterial;
// 		Wolf3D_Skin: THREE.MeshStandardMaterial;
// 		Wolf3D_Teeth: THREE.MeshStandardMaterial;
// 	};
// 	animations: any[];
// 	// animations: GLTFAction[];
// };
type GLTFResult = any;

export function Avatar(props: React.JSX.IntrinsicElements["group"]) {
	const { scene } = useGLTF("/models/67c9ceacc959f55d6cdf4344.glb");
	const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
	const { nodes, materials } = useGraph(clone) as GLTFResult;

	const { currentAnimation } = useWaifu();

	const { animations: idleAnimation } = useFBX("/animations/Standing Idle.fbx");
	const { animations: angryAnimation } = useFBX("/animations/Angry.fbx");
	const { animations: shyAnimation } = useFBX("/animations/Bashful.fbx");
	const { animations: greetingAnimation } = useFBX(
		"/animations/Standing Greeting.fbx"
	);
	const { animations: talkingAnimation } = useFBX("/animations/Talking.fbx");

	idleAnimation[0].name = "Idle" as WAIFU_ANIMATION_TYPE;
	angryAnimation[0].name = "Angry" as WAIFU_ANIMATION_TYPE;
	shyAnimation[0].name = "Shy" as WAIFU_ANIMATION_TYPE;
	greetingAnimation[0].name = "Greeting" as WAIFU_ANIMATION_TYPE;
	talkingAnimation[0].name = "Talking" as WAIFU_ANIMATION_TYPE;

	const group = useRef<any>(null) as any;
	const { actions } = useAnimations(
		[
			idleAnimation[0],
			angryAnimation[0],
			shyAnimation[0],
			greetingAnimation[0],
			talkingAnimation[0],
		],
		group
	);

	useEffect(() => {
		actions[currentAnimation]?.reset().fadeIn(0.5).play();
		return () => {
			actions[currentAnimation]?.fadeOut(0.5);
		};
	}, [currentAnimation]);

	return (
		<group {...props} dispose={null} ref={group}>
			<primitive object={nodes.Hips} />
			<skinnedMesh
				geometry={nodes.Wolf3D_Hair.geometry}
				material={materials.Wolf3D_Hair}
				skeleton={nodes.Wolf3D_Hair.skeleton}
			/>
			<skinnedMesh
				geometry={nodes.Wolf3D_Body.geometry}
				material={materials.Wolf3D_Body}
				skeleton={nodes.Wolf3D_Body.skeleton}
			/>
			<skinnedMesh
				geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
				material={materials.Wolf3D_Outfit_Bottom}
				skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
			/>
			<skinnedMesh
				geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
				material={materials.Wolf3D_Outfit_Footwear}
				skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
			/>
			<skinnedMesh
				geometry={nodes.Wolf3D_Outfit_Top.geometry}
				material={materials.Wolf3D_Outfit_Top}
				skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
			/>
			<skinnedMesh
				name="EyeLeft"
				geometry={nodes.EyeLeft.geometry}
				material={materials.Wolf3D_Eye}
				skeleton={nodes.EyeLeft.skeleton}
				morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
				morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
			/>
			<skinnedMesh
				name="EyeRight"
				geometry={nodes.EyeRight.geometry}
				material={materials.Wolf3D_Eye}
				skeleton={nodes.EyeRight.skeleton}
				morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
				morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
			/>
			<skinnedMesh
				name="Wolf3D_Head"
				geometry={nodes.Wolf3D_Head.geometry}
				material={materials.Wolf3D_Skin}
				skeleton={nodes.Wolf3D_Head.skeleton}
				morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
				morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
			/>
			<skinnedMesh
				name="Wolf3D_Teeth"
				geometry={nodes.Wolf3D_Teeth.geometry}
				material={materials.Wolf3D_Teeth}
				skeleton={nodes.Wolf3D_Teeth.skeleton}
				morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
				morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
			/>
		</group>
	);
}

useGLTF.preload("/models/67c9ceacc959f55d6cdf4344.glb");
